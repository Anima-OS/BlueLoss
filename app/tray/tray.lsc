import path from 'path'
import { Tray, Menu, app as electronApp } from 'electron'

import { showSettingsWindow, toggleSettingsWindow } from '../settingsWindow/settingsWindow.lsc'
import { updateSetting, getSettings } from '../settings/settings.lsc'
import { capitalizeFirstLetter } from '../common/utils.lsc'

let tray = null // might need to be outside to avoid being garbage collected. https://electron.atom.io/docs/api/tray/
trayIconsFolder = path.resolve(__dirname, '..', 'tray', 'icons')

initTrayMenu():void ->
  now tray = new Tray(getNewTrayIconPath(getSettings().trayIconColor))
  tray.setContextMenu(createContextMenu())
  tray.setToolTip('LANLost')
  tray.on('double-click', toggleSettingsWindow)

createContextMenu():Object ->
  Menu.buildFromTemplate(
    [
      {
        label: 'Open LANLost Settings',
        click: showSettingsWindow
      },
      {
        label: generateEnabledDisabledLabel(),
        click: toggleEnabledFromTray
      },
      {
        label: 'Quit LANLost',
        click: electronApp.quit
      }
    ]
  )

getNewTrayIconPath(trayIconColor: string):string ->
  path.join(trayIconsFolder, `LANLost-${ capitalizeFirstLetter(trayIconColor) }-128x128.png`)

generateEnabledDisabledLabel():string ->
  `${ if getSettings().lanLostEnabled: 'Disable' else: 'Enable' } LANLost`

changeTrayIcon(newTrayIconColor: string):void ->
  tray.setImage(getNewTrayIconPath(newTrayIconColor))

updateTrayMenu():void ->
  tray.setContextMenu(createContextMenu())

toggleEnabledFromTray():void ->
  updateSetting('lanLostEnabled', !getSettings().lanLostEnabled)

export {
  initTrayMenu,
  changeTrayIcon,
  createContextMenu,
  updateTrayMenu,
}
