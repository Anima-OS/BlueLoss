import path from 'path'
import { Tray, Menu, app as electronApp } from 'electron'

import { showSettingsWindow, toggleSettingsWindow } from '../settingsWindow/settingsWindow.lsc'
import { toggleEnabledFromTray } from './toggleEnabledFromTray.lsc'
import { getSettings } from '../db/settings.lsc'

let tray = null // might need to be outside to avoid being garbage collected. https://electron.atom.io/docs/api/tray/
trayIconsFolderPath = path.resolve(__dirname, '..', '..', 'resources', 'icons')

getNewTrayIconPath(trayIconColor) ->
  path.join(trayIconsFolderPath, trayIconColor, `BlueLoss-${ trayIconColor }-128x128.png`)

initTrayMenu():void ->
  now tray = new Tray(getNewTrayIconPath(getSettings().trayIconColor))
  tray.setContextMenu(createContextMenu())
  tray.setToolTip('BlueLoss Settings')
  tray.on('double-click', toggleSettingsWindow)

createContextMenu() -> Menu.buildFromTemplate(
  [
    {
      label: 'Open BlueLoss Settings',
      click() {
        showSettingsWindow()
      }
    },
    {
      label: `${ if getSettings().blueLossEnabled: 'Disable' else: 'Enable' } BlueLoss`,
      click(){
        toggleEnabledFromTray()
        tray.setContextMenu(createContextMenu())
      }
    },
    {
      label: 'Quit BlueLoss',
      click(){
        electronApp.quit()
      }
    }
  ]
)

changeTrayIcon(newTrayIconColor):void ->
  tray.setImage(getNewTrayIconPath(newTrayIconColor))


export {
  initTrayMenu,
  changeTrayIcon
}
