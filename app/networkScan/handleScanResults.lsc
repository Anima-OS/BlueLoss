import _ from 'lodash'

import { DeviceType } from '../types/types.lsc'
import { logger } from '../common/logging/logging.lsc'
import { settingsWindow } from '../settingsWindow/settingsWindow.lsc'
import { getSettings, updateSetting, modifyADeviceInDevicesToSearchFor } from '../settings/settings.lsc'
import { lockSystemIfShouldLock } from '../common/lockSystem.lsc'

handleScanResults(devicesFound: Array<DeviceType>):void ->
  logger.debug(`scan returned these active devices: \n`, devicesFound)

  { devicesToSearchFor } = getSettings()

  settingsWindow?.webContents?.send(
    'mainprocess:update-of-network-devices-can-see',
    { devicesCanSee: devicesFound }
  )

  if _.isEmpty(devicesToSearchFor): return

  devicesFound.forEach((device):void ->
    { macAddress , lastSeen } = device
    if !devicesToSearchFor[macAddress]: return

    lockSystemIfShouldLock(lastSeen)

    updateSetting('devicesToSearchFor',
      modifyADeviceInDevicesToSearchFor(macAddress, 'lastSeen', Date.now())
    )

  )



export {
  handleScanResults
}
