import { DeviceType } from '../types/types.lsc'
import { logger } from '../common/logging/logging.lsc'
import { settingsWindow } from '../settingsWindow/settingsWindow.lsc'

// let lastTimeSawADeviceWeAreLookingFor = Date.now()

handleScanResults(devices: Array<DeviceType>):void ->
  /**
   * Dunno why, but you need an extra object at the end to make an array of objects
   * print right in winston.
   */
  logger.debug(`scan returned these active devices: \n`, devices, {})

  settingsWindow?.webContents?.send('mainprocess:update-of-network-devices-can-see', devices)

  // sawDeviceWeAreLookingFor = dedupedDeviceList.some(({deviceId}) -> _.find(getSettings().devicesToSearchFor, { deviceId }))
  // shouldLock = checkIfShouldLock(sawDeviceWeAreLookingFor, lastTimeSawADeviceWeAreLookingFor)

  // if shouldLock: lockSystem()
  // if sawDeviceWeAreLookingFor: now lastTimeSawADeviceWeAreLookingFor = Date.now()



export {
  handleScanResults
}
