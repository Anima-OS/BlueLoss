import { h } from 'hyperapp'
import _ from 'lodash'

import DeviceCard from '../components/deviceCard.lsc'

export default ({ actions, state }) ->
  infoWindowDisplay = if state.activeTab === 'statusTab': 'flex' else: 'none'
  statusAnimationVisibility = if state.lanLostEnabled: 'visible' else: 'hidden'
  lanLostStatusText = if state.lanLostEnabled: 'Enabled' else: 'Disabled'
  lookingForHeaderDisplay = if state.devicesToSearchFor.length > 0: 'block' else: 'none'

  <div id="statusTabInfoWindow" style={ { display: infoWindowDisplay } } >
    <div id="topStatus">
      <div id="statusAnimation" style={ { visibility: statusAnimationVisibility } }>
        <ul oncreate={ actions.animateDots }>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
        </ul>
      </div>
      <x-box id="disableButton">
        <x-switch
          id="lanLostenableswitch"
          toggled={ state.lanLostEnabled }
          onchange={(event):void ->
            actions.updateSetting({ settingName: 'lanLostEnabled', settingValue: event.currentTarget.toggled})
          }
        ></x-switch>
        <x-label for="lanLostenableswitch" id="lanLostenableswitch">LANLost { lanLostStatusText }</x-label>
      </x-box>
    </div>
    <div id="devicesContainer">
      <div id="lookingForHeader" style={ { display: lookingForHeaderDisplay } } >
        Currently Looking For:
      </div>
      {
        state.devicesToSearchFor.map(({deviceName, macAddress}) ->
          <DeviceCard key={macAddress} actions={actions} lookingForDevice={true} deviceName={deviceName} macAddress={macAddress} />
        )
      }
      <div id="deviceAddHeader">
        Devices To Add:
      </div>
      {
        // Regular Array.includes compares by reference, not value, so using _.find.
        state.devicesCanSee
          .filter(({macAddress}) -> !_.find(state.devicesToSearchFor, {macAddress}))
          .map(({deviceName, macAddress}) ->
            <DeviceCard key={macAddress} actions={actions} lookingForDevice={false} deviceName={deviceName} macAddress={macAddress} />
          )
      }
    </div>
    <div id="devicesContainerBottomLip"></div>
  </div>
