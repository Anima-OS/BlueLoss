import { ipcRenderer } from 'electron'
import { h, app } from 'hyperapp'  // eslint-disable-line no-unused-vars
import { withLogger } from '@hyperapp/logger'

import {
  getInitialSettingsFromMainProcess as getInitialState,
  identity,
  handleRendererWindowError
} from './utils.lsc'
import appActions from './actions/actionsIndex.lsc'
import views from './views/viewsIndex.lsc'
import { DeviceType, SettingsTypes } from '../../types/types.lsc'

logInDev = if ISDEV: withLogger else: identity
settingsWindowRendererApp = logInDev(app)(getInitialState(), appActions, views, document.body)
/**
 * Some settings (such as 'lanLostEnabled') can be changed from the main process, so listen
 * for that.
 */
ipcRenderer.on('mainprocess:setting-updated-in-main', (event, setting: SettingsTypes):void ->
  settingsWindowRendererApp?.updateStateOnIpcMessage?(setting)
)
ipcRenderer.on('mainprocess:update-of-network-devices-can-see', (event, devicesCanSee: Array<DeviceType>):void ->
  settingsWindowRendererApp?.updateStateOnIpcMessage?(devicesCanSee)
)

window.onerror = handleRendererWindowError
window.onunhandledrejection = handleRendererWindowError
