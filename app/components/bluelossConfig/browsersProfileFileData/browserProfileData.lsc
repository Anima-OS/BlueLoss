import { getScreenResolution } from '../../utils.lsc'

getFirefoxUserChrome():string -> `
@-moz-document url(chrome://browser/content/browser.xul) {
#TabsToolbar {
  visibility: collapse !important;
}
#nav-bar {
  visibility: collapse !important;
}
`

getFirefoxPrefsJs():String -> `
user_pref("browser.tabs.warnOnClose", false);
user_pref("browser.sessionstore.restore_on_demand", false);
user_pref("browser.tabs.warnOnCloseOtherTabs", false);
`
/*****
* Localhost addresses
* ::
* ::1
* 0.0.0.0
* 127.0.0.1
*/
getChromePrefs():Object ->
  screenResolution = getScreenResolution()
  if !screenResolution: return ({})
  ({
    "browser": {
      "app_window_placement": {
        "[::]_/": {
          "maximized": false,
          "top": generateTop(screenResolution),
          "bottom": generateBottom(screenResolution),
          "left": generateLeft(screenResolution),
          "right": generateRight(screenResolution),
        },
        "[::1]_/": {
          "maximized": false,
          "top": generateTop(screenResolution),
          "bottom": generateBottom(screenResolution),
          "left": generateLeft(screenResolution),
          "right": generateRight(screenResolution),
        },
        "0": {
          "0": {
            "0": {
              "0_/": {
                "maximized": false,
                "top": generateTop(screenResolution),
                "bottom": generateBottom(screenResolution),
                "left": generateLeft(screenResolution),
                "right": generateRight(screenResolution),
              }
            }
          }
        },
        "127": {
          "0": {
            "0": {
              "1_/": {
                "top": generateTop(screenResolution),
                "maximized": false,
                "bottom": generateBottom(screenResolution),
                "left": generateLeft(screenResolution),
                "right": generateRight(screenResolution),
              }
            }
          }
        },
      },
    }
  })

/*****
* We want the chromium browser to end up in the center of the screen
* with a width of 786px and a height of 616px. It's ok if the users screen
* dimensions change later as when they move the window and close it, chromium
* updates that in the Preferences file.
*/
generateTop(screenResolution):Number ->

generateBottom(screenResolution):Number ->

generateLeft(screenResolution):Number ->

generateRight(screenResolution):Number ->

export {
  getFirefoxUserChrome,
  getFirefoxPrefsJs,
  getChromePrefs,
}
