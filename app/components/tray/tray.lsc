import SysTray from 'systray'

import { updateSetting, getSettings } from '../settings/settings.lsc'
import { base64IconData } from './iconsData.lsc'

let systray = null

initTrayMenu():Promise ->
  new Promise((resolve):void ->
    now systray = new SysTray({
      menu: {
        icon: base64IconData[getTrayIconColor()],
        title: "BlueLoss",
        tooltip: "BlueLoss",
        items: generateMenuItems()
      },
      debug: false,
      copyDir: true, // copy go tray binary to outside directory, useful for packing tool like pkg.
    })
    systray.onClick(systrayClickHandler)
    systray.onReady(resolve)
  )

systrayClickHandler(action):void ->
  if action.seq_id === 0:
    console.log('open settings window here')
  if action.seq_id === 1:
    updateSetting('blueLossEnabled', !getSettings().blueLossEnabled)
    systray.sendAction({
      type: 'update-item',
      item: {
        ...action.item,
        title: generateEnabledDisabledLabel(),
        tooltip: generateEnabledDisabledLabel(),
      },
      seq_id: action.seq_id,
    })
  if action.seq_id === 2:
    toggleTrayIconColor()
    systray.sendAction({
      type: 'update-menu',
      menu: {
        icon: base64IconData[getTrayIconColor()],
        title: "BlueLoss",
        tooltip: "BlueLoss",
        items: generateMenuItems()
      },
      seq_id: action.seq_id
    })
  if action.seq_id === 3:
    systray.kill()

generateMenuItems():Array ->
  [
    {
      title: "Open BlueLoss Settings",
      tooltip: "Open BlueLoss Settings",
      enabled: true
    },
    {
      title: generateEnabledDisabledLabel(),
      tooltip: generateEnabledDisabledLabel(),
      enabled: true
    },
    {
      title: "Toggle Tray Icon Color",
      tooltip: "Toggle Tray Icon Color",
      enabled: true
    },

    {
      title: "Quit BlueLoss",
      tooltip: "Quit BlueLoss",
      enabled: true
    }
  ]

getTrayIconColor():String ->
  if ISDEV: 'white' else: getSettings().trayIconColor

toggleTrayIconColor():void ->
  newColor = if getSettings().trayIconColor === 'white': 'blue' else: 'white'
  updateSetting('trayIconColor', newColor)

generateEnabledDisabledLabel():string ->
  `${ if getSettings().blueLossEnabled: 'Disable' else: 'Enable' } BlueLoss`

export {
  initTrayMenu,
}
