import fs from 'fs'
import path from 'path'
import util from 'util'
import { app as electronApp } from 'electron'

import jetpack from 'fs-jetpack'

import { updateSetting } from '../../db/settings.lsc'
import { logger } from '../logging/logging.lsc'

pReadFile = util.promisify(fs.readFile)

ouiFilePath = path.join(electronApp.getPath('userData'), 'lanlost-mac-vendor-prefixes.txt')
initialOUIfilePath = path.join(__dirname, 'lanlost-mac-vendor-prefixes.txt')
let ouiFileData = null

loadOUIfile():Promise<any> ->
  jetpack.exists(ouiFilePath)
    .then((result: string | false): ?Promise<any> ->
      if result !== 'file':
        return jetpack.copy(initialOUIfilePath, ouiFilePath)
    )
    .then(() -> pReadFile(ouiFilePath, 'utf8'))
    .then(fileData => {
      now ouiFileData = fileData.split(/\r\n?|\n/)
    })
    .catch(err => {
      logger.error(`Couldn't load OUI file`, err)
      updateSetting('getMacVendorInfo', false)
    })


getOUIfileData() -> return ouiFileData


export {
  loadOUIfile,
  getOUIfileData,
}
