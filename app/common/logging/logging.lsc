import path from 'path'

import winston from 'winston'

import { CustomRollbarTransport, rollbarLogger } from './customRollbarTransport.lsc'
import { getSettings } from '../../settings/settings.lsc'
import { blueLossLogsFolderPath } from '../../bluelossConfig/createBlueLossConfig.lsc'

bluelossLogFilePath = path.join(blueLossLogsFolderPath, 'BlueLoss.log.txt')
rollbarTransportOptions = {
  name: 'rollbarTransport',
  level: 'error',
  handleExceptions: true,
  humanReadableUnhandledException: true,
}

// https://github.com/winstonjs/winston/tree/2.4.0
logger = new winston.Logger({
  level: 'debug',
  exitOnError: false
})

if ISDEV:
  logger.add(winston.transports.Console, {
    handleExceptions: true,
    humanReadableUnhandledException: true,
    // json: true
  })
// dont send errors to rollbar in dev && only if enabled.
if !ISDEV and getSettings().reportErrors: addRollbarLogging()
/**
* We also need to enable/disable the rollbar module itself as well,
* as it is set to report uncaught exceptions as well as logging
* caught errors.
*/
addRollbarLogging():void ->
  rollbarLogger.configure({enabled: true})
  logger.add(CustomRollbarTransport, rollbarTransportOptions)

removeRollbarLogging():void ->
  rollbarLogger.configure({enabled: false})
  logger.remove('rollbarTransport')

addWinstonFileLogging():Promise ->
  winston.add(
    winston.transports.File,
    {
      filename: bluelossLogFilePath ,
      maxsize: 500000,  // 500KB
      maxFiles: 6,
      prettyPrint: true,
      depth: 10
    }
  )

export {
  logger,
  addRollbarLogging,
  removeRollbarLogging,
  addWinstonFileLogging,
}
