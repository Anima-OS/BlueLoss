import { print as prettyPrintObj } from 'q-i'
import _ from 'lodash'

import { SettingsTypes } from '../types/types.lsc'

noop() -> return

omitGawkObserverFromSettings(settings) ->
  omitInheritedProperties(settings, '__gawk__')

logSettingsUpdateInDev(newSettingKey: string, newSettingValue: SettingsTypes):void ->
  if ISDEV:
    console.log('======================updateSetting======================')
    console.log(newSettingKey)
    prettyPrintObj(newSettingValue)

/**
 * In the off-chance that an object key name is literally the word 'undefined',
 * set Symbol() as the default param.
 */
omitInheritedProperties(obj: any, propFilter: string | Symbol = Symbol()) ->
  Object.getOwnPropertyNames(obj).reduce((prev, propName) ->
    if propFilter === propName: return prev
    if isObject(obj[propName]):
      return {...prev, ...{ [propName]: omitInheritedProperties(obj[propName], propFilter) }}

    {...prev, ...{ [propName]: obj[propName] }}
  , {})


isObject(obj) ->
  _.isObject(obj) and !_.isArray(obj) and !_.isFunction(obj) and !_.isRegExp(obj)

export {
  noop,
  logSettingsUpdateInDev,
  omitInheritedProperties,
  omitGawkObserverFromSettings,
}
