import path from 'path'
import url from 'url'
import { ipcMain, BrowserWindow, Menu, shell } from 'electron'

import Positioner from 'electron-positioner'

import { logger } from '../common/logging/logging.lsc'
import { updateSetting } from '../settings/settings.lsc'

let notificationWindow = null
notificationWindowMenu = if ISDEV: Menu.buildFromTemplate([{role: 'reload'}]) else: null
updateHTMLfilePath = url.format({
  protocol: 'file',
  slashes: true,
  pathname: path.resolve(__dirname, '..', 'appUpdates', 'updateNotification.html')
})
iconFileName = path.join(__dirname, '..', 'appUpdates', `BlueLoss-Blue-512x512.png`)

showUpdateNotification(latestUpdateVersion: string):void ->
  now notificationWindow = new BrowserWindow(
    {
      width: getPlatformNotificationWindowWidth(),
      height: getPlatformNotificationWindowHeight(),
      resizable: false,
      alwaysOnTop: true,
      maximizable: false,
      fullscreenable: false,
      acceptFirstMouse: true,
      titleBarStyle: 'hidden',
      autoHideMenuBar: true,
      show: false,
      icon: iconFileName,
      title: 'An Update Is Available For BlueLoss'
    }
  )

  notificationWindow.setMenu(notificationWindowMenu)

  var positioner = new Positioner(notificationWindow)
  positioner.move('bottomRight')

  notificationWindow.loadURL(updateHTMLfilePath)
  if ISDEV: notificationWindow.webContents.openDevTools({ mode: 'undocked'})

  notificationWindow.once('ready-to-show', ():void ->
    notificationWindow.show()
  )
  notificationWindow.webContents.on('dom-ready', ():void ->
    notificationWindow.webContents.send('main-process:sent-latest-update-version', latestUpdateVersion)
  )
  notificationWindow.on('closed', ():void ->
    now notificationWindow = null
  )
  notificationWindow.webContents.once('crashed', (event):void ->
    logger.error('notificationWindow.webContents crashed', event)
  )
  notificationWindow.once('unresponsive', (event):void ->
    logger.error('notificationWindow unresponsive', event)
  )


ipcMain.on('renderer:open-update-web-page', ():void ->
  notificationWindow?.close?()
  shell.openExternal('https://github.com/Darkle/BlueLoss/releases')
)

ipcMain.on('renderer:skip-update-version', (event, versionToSkip: string): void ->
  notificationWindow?.close?()
  updateSetting('skipUpdateVersion', versionToSkip)
)

getPlatformNotificationWindowWidth():number ->
  switch process.platform {
    case 'darwin':
      return 420
    case 'linux':
      return 415
    case 'win32':
      return 435
  }

getPlatformNotificationWindowHeight():number ->
  switch process.platform {
    case 'darwin':
      return 140
    case 'linux':
      return 120
    case 'win32':
      return 160
  }

export{
  showUpdateNotification
}
