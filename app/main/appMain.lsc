import '../../config/env.lsc'

import Promise from 'bluebird'

// import { logger } from '../common/logging/logging.lsc'
// import { init as startBluetoothScanning } from '../bluetooth/blueToothMain.lsc'
import { initSettings, /*updateSetting*/ } from '../settings/settings.lsc'
// import { setUpDev } from '../common/utils.lsc'
// import { initTrayMenu } from '../tray/tray.lsc'
// import { showSettingsWindow } from '../settingsWindow/settingsWindow.lsc'
// import { enableRunOnStartup } from '../common/runOnStartup.lsc'
// import { checkForUpdate as checkForAppUpdate } from '../appUpdates/appUpdates.lsc'

// i need to make those funcs into a promise

Promise
  .resolve(initSettings)
  // .tap(setUpDev)
  // .tap(initTrayMenu)
  // .tap(startBluetoothScanning)
  // .tap(checkForAppUpdate)
  // .then(({ firstRun }):void ->
  //   if firstRun:
  //     updateSetting('firstRun', !firstRun)
  //     showSettingsWindow()
  //     enableRunOnStartup(firstRun)
  // )


// process.on('unhandledRejection', logger.error)
process.on('unhandledRejection', err => {console.error(err)})
// process.on('uncaughtException', (err):void ->
//   logger.error(err)
//   process.exit(1) // eslint-disable-line no-process-exit
// )
process.on('uncaughtException', err => {
  console.error(err)
  process.exit(1) // eslint-disable-line no-process-exit
})

